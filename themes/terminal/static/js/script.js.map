{"version":3,"sources":["main.js"],"names":["window","Prism","require"],"mappings":";;AAAAA,OAAOC,KAAP,GAAeC,QAAQ,SAAR,CAAf","file":"script.js","sourcesContent":["window.Prism = require('prismjs');\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["prism.js"],"names":["_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","util","encode","tokens","Token","type","content","alias","map","replace","o","Object","prototype","toString","call","match","objId","obj","defineProperty","value","clone","key","hasOwnProperty","v","languages","extend","id","redef","insertBefore","inside","before","insert","root","grammar","arguments","length","newToken","ret","token","DFS","callback","visited","i","plugins","highlightAll","async","env","selector","hooks","run","elements","document","querySelectorAll","element","highlightElement","language","parent","test","className","parentNode","toLowerCase","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","strarr","rest","tokenloop","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","delNum","from","index","to","k","p","len","slice","after","args","push","wrapped","Array","splice","apply","all","add","name","callbacks","matchedStr","join","tag","classes","attributes","aliases","keys","addEventListener","message","parse","close","script","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","module","exports","markup","xml","html","mathml","svg","css","clike","punctuation","javascript","js","querySelector","fileHighlight","Extensions","forEach","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send"],"mappings":";;AACA;;;;AAIA,IAAIA,QAAS,OAAOC,MAAP,KAAkB,WAAnB,GACTA,MADS,CACA;AADA,EAGT,OAAOC,iBAAP,KAA6B,WAA7B,IAA4CC,gBAAgBD,iBAA7D,GACEC,IADF,CACO;AADP,EAEE,EALQ,CAKH;AALT;;AAQA;;;;;;AAMA,IAAIC,QAAS,YAAU;;AAEvB;AACA,KAAIC,OAAO,0BAAX;AACA,KAAIC,WAAW,CAAf;;AAEA,KAAIC,IAAIP,MAAMI,KAAN,GAAc;AACrBI,QAAM;AACLC,WAAQ,gBAAUC,MAAV,EAAkB;AACzB,QAAIA,kBAAkBC,KAAtB,EAA6B;AAC5B,YAAO,IAAIA,KAAJ,CAAUD,OAAOE,IAAjB,EAAuBL,EAAEC,IAAF,CAAOC,MAAP,CAAcC,OAAOG,OAArB,CAAvB,EAAsDH,OAAOI,KAA7D,CAAP;AACA,KAFD,MAEO,IAAIP,EAAEC,IAAF,CAAOI,IAAP,CAAYF,MAAZ,MAAwB,OAA5B,EAAqC;AAC3C,YAAOA,OAAOK,GAAP,CAAWR,EAAEC,IAAF,CAAOC,MAAlB,CAAP;AACA,KAFM,MAEA;AACN,YAAOC,OAAOM,OAAP,CAAe,IAAf,EAAqB,OAArB,EAA8BA,OAA9B,CAAsC,IAAtC,EAA4C,MAA5C,EAAoDA,OAApD,CAA4D,SAA5D,EAAuE,GAAvE,CAAP;AACA;AACD,IATI;;AAWLJ,SAAM,cAAUK,CAAV,EAAa;AAClB,WAAOC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,EAAkCK,KAAlC,CAAwC,kBAAxC,EAA4D,CAA5D,CAAP;AACA,IAbI;;AAeLC,UAAO,eAAUC,GAAV,EAAe;AACrB,QAAI,CAACA,IAAI,MAAJ,CAAL,EAAkB;AACjBN,YAAOO,cAAP,CAAsBD,GAAtB,EAA2B,MAA3B,EAAmC,EAAEE,OAAO,EAAEpB,QAAX,EAAnC;AACA;AACD,WAAOkB,IAAI,MAAJ,CAAP;AACA,IApBI;;AAsBL;AACAG,UAAO,eAAUV,CAAV,EAAa;AACnB,QAAIL,OAAOL,EAAEC,IAAF,CAAOI,IAAP,CAAYK,CAAZ,CAAX;;AAEA,YAAQL,IAAR;AACC,UAAK,QAAL;AACC,UAAIe,QAAQ,EAAZ;;AAEA,WAAK,IAAIC,GAAT,IAAgBX,CAAhB,EAAmB;AAClB,WAAIA,EAAEY,cAAF,CAAiBD,GAAjB,CAAJ,EAA2B;AAC1BD,cAAMC,GAAN,IAAarB,EAAEC,IAAF,CAAOmB,KAAP,CAAaV,EAAEW,GAAF,CAAb,CAAb;AACA;AACD;;AAED,aAAOD,KAAP;;AAED,UAAK,OAAL;AACC;AACA,aAAOV,EAAEF,GAAF,IAASE,EAAEF,GAAF,CAAM,UAASe,CAAT,EAAY;AAAE,cAAOvB,EAAEC,IAAF,CAAOmB,KAAP,CAAaG,CAAb,CAAP;AAAyB,OAA7C,CAAhB;AAdF;;AAiBA,WAAOb,CAAP;AACA;AA5CI,GADe;;AAgDrBc,aAAW;AACVC,WAAQ,gBAAUC,EAAV,EAAcC,KAAd,EAAqB;AAC5B,QAAI7B,OAAOE,EAAEC,IAAF,CAAOmB,KAAP,CAAapB,EAAEwB,SAAF,CAAYE,EAAZ,CAAb,CAAX;;AAEA,SAAK,IAAIL,GAAT,IAAgBM,KAAhB,EAAuB;AACtB7B,UAAKuB,GAAL,IAAYM,MAAMN,GAAN,CAAZ;AACA;;AAED,WAAOvB,IAAP;AACA,IATS;;AAWV;;;;;;;;;AASA8B,iBAAc,sBAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AACrDA,WAAOA,QAAQhC,EAAEwB,SAAjB;AACA,QAAIS,UAAUD,KAAKH,MAAL,CAAd;;AAEA,QAAIK,UAAUC,MAAV,IAAoB,CAAxB,EAA2B;AAC1BJ,cAASG,UAAU,CAAV,CAAT;;AAEA,UAAK,IAAIE,QAAT,IAAqBL,MAArB,EAA6B;AAC5B,UAAIA,OAAOT,cAAP,CAAsBc,QAAtB,CAAJ,EAAqC;AACpCH,eAAQG,QAAR,IAAoBL,OAAOK,QAAP,CAApB;AACA;AACD;;AAED,YAAOH,OAAP;AACA;;AAED,QAAII,MAAM,EAAV;;AAEA,SAAK,IAAIC,KAAT,IAAkBL,OAAlB,EAA2B;;AAE1B,SAAIA,QAAQX,cAAR,CAAuBgB,KAAvB,CAAJ,EAAmC;;AAElC,UAAIA,SAASR,MAAb,EAAqB;;AAEpB,YAAK,IAAIM,QAAT,IAAqBL,MAArB,EAA6B;;AAE5B,YAAIA,OAAOT,cAAP,CAAsBc,QAAtB,CAAJ,EAAqC;AACpCC,aAAID,QAAJ,IAAgBL,OAAOK,QAAP,CAAhB;AACA;AACD;AACD;;AAEDC,UAAIC,KAAJ,IAAaL,QAAQK,KAAR,CAAb;AACA;AACD;;AAED;AACAtC,MAAEwB,SAAF,CAAYe,GAAZ,CAAgBvC,EAAEwB,SAAlB,EAA6B,UAASH,GAAT,EAAcF,KAAd,EAAqB;AACjD,SAAIA,UAAUa,KAAKH,MAAL,CAAV,IAA0BR,OAAOQ,MAArC,EAA6C;AAC5C,WAAKR,GAAL,IAAYgB,GAAZ;AACA;AACD,KAJD;;AAMA,WAAOL,KAAKH,MAAL,IAAeQ,GAAtB;AACA,IAhES;;AAkEV;AACAE,QAAK,aAAS7B,CAAT,EAAY8B,QAAZ,EAAsBnC,IAAtB,EAA4BoC,OAA5B,EAAqC;AACzCA,cAAUA,WAAW,EAArB;AACA,SAAK,IAAIC,CAAT,IAAchC,CAAd,EAAiB;AAChB,SAAIA,EAAEY,cAAF,CAAiBoB,CAAjB,CAAJ,EAAyB;AACxBF,eAAS1B,IAAT,CAAcJ,CAAd,EAAiBgC,CAAjB,EAAoBhC,EAAEgC,CAAF,CAApB,EAA0BrC,QAAQqC,CAAlC;;AAEA,UAAI1C,EAAEC,IAAF,CAAOI,IAAP,CAAYK,EAAEgC,CAAF,CAAZ,MAAsB,QAAtB,IAAkC,CAACD,QAAQzC,EAAEC,IAAF,CAAOe,KAAP,CAAaN,EAAEgC,CAAF,CAAb,CAAR,CAAvC,EAAoE;AACnED,eAAQzC,EAAEC,IAAF,CAAOe,KAAP,CAAaN,EAAEgC,CAAF,CAAb,CAAR,IAA8B,IAA9B;AACA1C,SAAEwB,SAAF,CAAYe,GAAZ,CAAgB7B,EAAEgC,CAAF,CAAhB,EAAsBF,QAAtB,EAAgC,IAAhC,EAAsCC,OAAtC;AACA,OAHD,MAIK,IAAIzC,EAAEC,IAAF,CAAOI,IAAP,CAAYK,EAAEgC,CAAF,CAAZ,MAAsB,OAAtB,IAAiC,CAACD,QAAQzC,EAAEC,IAAF,CAAOe,KAAP,CAAaN,EAAEgC,CAAF,CAAb,CAAR,CAAtC,EAAmE;AACvED,eAAQzC,EAAEC,IAAF,CAAOe,KAAP,CAAaN,EAAEgC,CAAF,CAAb,CAAR,IAA8B,IAA9B;AACA1C,SAAEwB,SAAF,CAAYe,GAAZ,CAAgB7B,EAAEgC,CAAF,CAAhB,EAAsBF,QAAtB,EAAgCE,CAAhC,EAAmCD,OAAnC;AACA;AACD;AACD;AACD;AAnFS,GAhDU;AAqIrBE,WAAS,EArIY;;AAuIrBC,gBAAc,sBAASC,KAAT,EAAgBL,QAAhB,EAA0B;AACvC,OAAIM,MAAM;AACTN,cAAUA,QADD;AAETO,cAAU;AAFD,IAAV;;AAKA/C,KAAEgD,KAAF,CAAQC,GAAR,CAAY,qBAAZ,EAAmCH,GAAnC;;AAEA,OAAII,WAAWJ,IAAII,QAAJ,IAAgBC,SAASC,gBAAT,CAA0BN,IAAIC,QAA9B,CAA/B;;AAEA,QAAK,IAAIL,IAAE,CAAN,EAASW,OAAd,EAAuBA,UAAUH,SAASR,GAAT,CAAjC,GAAiD;AAChD1C,MAAEsD,gBAAF,CAAmBD,OAAnB,EAA4BR,UAAU,IAAtC,EAA4CC,IAAIN,QAAhD;AACA;AACD,GApJoB;;AAsJrBc,oBAAkB,0BAASD,OAAT,EAAkBR,KAAlB,EAAyBL,QAAzB,EAAmC;AACpD;AACA,OAAIe,QAAJ;AAAA,OAActB,OAAd;AAAA,OAAuBuB,SAASH,OAAhC;;AAEA,UAAOG,UAAU,CAAC1D,KAAK2D,IAAL,CAAUD,OAAOE,SAAjB,CAAlB,EAA+C;AAC9CF,aAASA,OAAOG,UAAhB;AACA;;AAED,OAAIH,MAAJ,EAAY;AACXD,eAAW,CAACC,OAAOE,SAAP,CAAiB3C,KAAjB,CAAuBjB,IAAvB,KAAgC,GAAE,EAAF,CAAjC,EAAwC,CAAxC,EAA2C8D,WAA3C,EAAX;AACA3B,cAAUjC,EAAEwB,SAAF,CAAY+B,QAAZ,CAAV;AACA;;AAED;AACAF,WAAQK,SAAR,GAAoBL,QAAQK,SAAR,CAAkBjD,OAAlB,CAA0BX,IAA1B,EAAgC,EAAhC,EAAoCW,OAApC,CAA4C,MAA5C,EAAoD,GAApD,IAA2D,YAA3D,GAA0E8C,QAA9F;;AAEA;AACAC,YAASH,QAAQM,UAAjB;;AAEA,OAAI,OAAOF,IAAP,CAAYD,OAAOK,QAAnB,CAAJ,EAAkC;AACjCL,WAAOE,SAAP,GAAmBF,OAAOE,SAAP,CAAiBjD,OAAjB,CAAyBX,IAAzB,EAA+B,EAA/B,EAAmCW,OAAnC,CAA2C,MAA3C,EAAmD,GAAnD,IAA0D,YAA1D,GAAyE8C,QAA5F;AACA;;AAED,OAAIO,OAAOT,QAAQU,WAAnB;;AAEA,OAAIjB,MAAM;AACTO,aAASA,OADA;AAETE,cAAUA,QAFD;AAGTtB,aAASA,OAHA;AAIT6B,UAAMA;AAJG,IAAV;;AAOA9D,KAAEgD,KAAF,CAAQC,GAAR,CAAY,qBAAZ,EAAmCH,GAAnC;;AAEA,OAAI,CAACA,IAAIgB,IAAL,IAAa,CAAChB,IAAIb,OAAtB,EAA+B;AAC9B,QAAIa,IAAIgB,IAAR,EAAc;AACbhB,SAAIO,OAAJ,CAAYU,WAAZ,GAA0BjB,IAAIgB,IAA9B;AACA;AACD9D,MAAEgD,KAAF,CAAQC,GAAR,CAAY,UAAZ,EAAwBH,GAAxB;AACA;AACA;;AAED9C,KAAEgD,KAAF,CAAQC,GAAR,CAAY,kBAAZ,EAAgCH,GAAhC;;AAEA,OAAID,SAASpD,MAAMuE,MAAnB,EAA2B;AAC1B,QAAIC,SAAS,IAAID,MAAJ,CAAWhE,EAAEkE,QAAb,CAAb;;AAEAD,WAAOE,SAAP,GAAmB,UAASC,GAAT,EAAc;AAChCtB,SAAIuB,eAAJ,GAAsBD,IAAIE,IAA1B;;AAEAtE,OAAEgD,KAAF,CAAQC,GAAR,CAAY,eAAZ,EAA6BH,GAA7B;;AAEAA,SAAIO,OAAJ,CAAYkB,SAAZ,GAAwBzB,IAAIuB,eAA5B;;AAEA7B,iBAAYA,SAAS1B,IAAT,CAAcgC,IAAIO,OAAlB,CAAZ;AACArD,OAAEgD,KAAF,CAAQC,GAAR,CAAY,iBAAZ,EAA+BH,GAA/B;AACA9C,OAAEgD,KAAF,CAAQC,GAAR,CAAY,UAAZ,EAAwBH,GAAxB;AACA,KAVD;;AAYAmB,WAAOO,WAAP,CAAmBC,KAAKC,SAAL,CAAe;AACjCnB,eAAUT,IAAIS,QADmB;AAEjCO,WAAMhB,IAAIgB,IAFuB;AAGjCa,qBAAgB;AAHiB,KAAf,CAAnB;AAKA,IApBD,MAqBK;AACJ7B,QAAIuB,eAAJ,GAAsBrE,EAAE4E,SAAF,CAAY9B,IAAIgB,IAAhB,EAAsBhB,IAAIb,OAA1B,EAAmCa,IAAIS,QAAvC,CAAtB;;AAEAvD,MAAEgD,KAAF,CAAQC,GAAR,CAAY,eAAZ,EAA6BH,GAA7B;;AAEAA,QAAIO,OAAJ,CAAYkB,SAAZ,GAAwBzB,IAAIuB,eAA5B;;AAEA7B,gBAAYA,SAAS1B,IAAT,CAAcuC,OAAd,CAAZ;;AAEArD,MAAEgD,KAAF,CAAQC,GAAR,CAAY,iBAAZ,EAA+BH,GAA/B;AACA9C,MAAEgD,KAAF,CAAQC,GAAR,CAAY,UAAZ,EAAwBH,GAAxB;AACA;AACD,GAnOoB;;AAqOrB8B,aAAW,mBAAUC,IAAV,EAAgB5C,OAAhB,EAAyBsB,QAAzB,EAAmC;AAC7C,OAAIpD,SAASH,EAAE8E,QAAF,CAAWD,IAAX,EAAiB5C,OAAjB,CAAb;AACA,UAAO7B,MAAMsE,SAAN,CAAgB1E,EAAEC,IAAF,CAAOC,MAAP,CAAcC,MAAd,CAAhB,EAAuCoD,QAAvC,CAAP;AACA,GAxOoB;;AA0OrBuB,YAAU,kBAASD,IAAT,EAAe5C,OAAf,EAAwBsB,QAAxB,EAAkC;AAC3C,OAAInD,QAAQJ,EAAEI,KAAd;;AAEA,OAAI2E,SAAS,CAACF,IAAD,CAAb;;AAEA,OAAIG,OAAO/C,QAAQ+C,IAAnB;;AAEA,OAAIA,IAAJ,EAAU;AACT,SAAK,IAAI1C,KAAT,IAAkB0C,IAAlB,EAAwB;AACvB/C,aAAQK,KAAR,IAAiB0C,KAAK1C,KAAL,CAAjB;AACA;;AAED,WAAOL,QAAQ+C,IAAf;AACA;;AAEDC,cAAW,KAAK,IAAI3C,KAAT,IAAkBL,OAAlB,EAA2B;AACrC,QAAG,CAACA,QAAQX,cAAR,CAAuBgB,KAAvB,CAAD,IAAkC,CAACL,QAAQK,KAAR,CAAtC,EAAsD;AACrD;AACA;;AAED,QAAI4C,WAAWjD,QAAQK,KAAR,CAAf;AACA4C,eAAYlF,EAAEC,IAAF,CAAOI,IAAP,CAAY6E,QAAZ,MAA0B,OAA3B,GAAsCA,QAAtC,GAAiD,CAACA,QAAD,CAA5D;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,SAAS/C,MAA7B,EAAqC,EAAEgD,CAAvC,EAA0C;AACzC,SAAIC,UAAUF,SAASC,CAAT,CAAd;AAAA,SACCtD,SAASuD,QAAQvD,MADlB;AAAA,SAECwD,aAAa,CAAC,CAACD,QAAQC,UAFxB;AAAA,SAGCC,SAAS,CAAC,CAACF,QAAQE,MAHpB;AAAA,SAICC,mBAAmB,CAJpB;AAAA,SAKChF,QAAQ6E,QAAQ7E,KALjB;;AAOA,SAAI+E,UAAU,CAACF,QAAQA,OAAR,CAAgBI,MAA/B,EAAuC;AACtC;AACA,UAAIC,QAAQL,QAAQA,OAAR,CAAgBvE,QAAhB,GAA2BE,KAA3B,CAAiC,UAAjC,EAA6C,CAA7C,CAAZ;AACAqE,cAAQA,OAAR,GAAkBM,OAAON,QAAQA,OAAR,CAAgBO,MAAvB,EAA+BF,QAAQ,GAAvC,CAAlB;AACA;;AAEDL,eAAUA,QAAQA,OAAR,IAAmBA,OAA7B;;AAEA;AACA,UAAK,IAAI1C,IAAE,CAAN,EAASkD,MAAM,CAApB,EAAuBlD,IAAEqC,OAAO5C,MAAhC,EAAwCyD,OAAOb,OAAOrC,CAAP,EAAUP,MAAjB,EAAyB,EAAEO,CAAnE,EAAsE;;AAErE,UAAImD,MAAMd,OAAOrC,CAAP,CAAV;;AAEA,UAAIqC,OAAO5C,MAAP,GAAgB0C,KAAK1C,MAAzB,EAAiC;AAChC;AACA,aAAM8C,SAAN;AACA;;AAED,UAAIY,eAAezF,KAAnB,EAA0B;AACzB;AACA;;AAEDgF,cAAQU,SAAR,GAAoB,CAApB;;AAEA,UAAI/E,QAAQqE,QAAQW,IAAR,CAAaF,GAAb,CAAZ;AAAA,UACIG,SAAS,CADb;;AAGA;AACA,UAAI,CAACjF,KAAD,IAAUuE,MAAV,IAAoB5C,KAAKqC,OAAO5C,MAAP,GAAgB,CAA7C,EAAgD;AAC/CiD,eAAQU,SAAR,GAAoBF,GAApB;AACA7E,eAAQqE,QAAQW,IAAR,CAAalB,IAAb,CAAR;AACA,WAAI,CAAC9D,KAAL,EAAY;AACX;AACA;;AAED,WAAIkF,OAAOlF,MAAMmF,KAAN,IAAeb,aAAatE,MAAM,CAAN,EAASoB,MAAtB,GAA+B,CAA9C,CAAX;AAAA,WACIgE,KAAKpF,MAAMmF,KAAN,GAAcnF,MAAM,CAAN,EAASoB,MADhC;AAAA,WAEIiE,IAAI1D,CAFR;AAAA,WAGI2D,IAAIT,GAHR;;AAKA,YAAK,IAAIU,MAAMvB,OAAO5C,MAAtB,EAA8BiE,IAAIE,GAAJ,IAAWD,IAAIF,EAA7C,EAAiD,EAAEC,CAAnD,EAAsD;AACrDC,aAAKtB,OAAOqB,CAAP,EAAUjE,MAAf;AACA;AACA,YAAI8D,QAAQI,CAAZ,EAAe;AACd,WAAE3D,CAAF;AACAkD,eAAMS,CAAN;AACA;AACD;;AAED;;;;AAIA,WAAItB,OAAOrC,CAAP,aAAqBtC,KAArB,IAA8B2E,OAAOqB,IAAI,CAAX,EAAcd,MAAhD,EAAwD;AACvD;AACA;;AAED;AACAU,gBAASI,IAAI1D,CAAb;AACAmD,aAAMhB,KAAK0B,KAAL,CAAWX,GAAX,EAAgBS,CAAhB,CAAN;AACAtF,aAAMmF,KAAN,IAAeN,GAAf;AACA;;AAED,UAAI,CAAC7E,KAAL,EAAY;AACX;AACA;;AAED,UAAGsE,UAAH,EAAe;AACdE,0BAAmBxE,MAAM,CAAN,EAASoB,MAA5B;AACA;;AAED,UAAI8D,OAAOlF,MAAMmF,KAAN,GAAcX,gBAAzB;AAAA,UACIxE,QAAQA,MAAM,CAAN,EAASwF,KAAT,CAAehB,gBAAf,CADZ;AAAA,UAEIY,KAAKF,OAAOlF,MAAMoB,MAFtB;AAAA,UAGIL,SAAS+D,IAAIU,KAAJ,CAAU,CAAV,EAAaN,IAAb,CAHb;AAAA,UAIIO,QAAQX,IAAIU,KAAJ,CAAUJ,EAAV,CAJZ;;AAMA,UAAIM,OAAO,CAAC/D,CAAD,EAAIsD,MAAJ,CAAX;;AAEA,UAAIlE,MAAJ,EAAY;AACX2E,YAAKC,IAAL,CAAU5E,MAAV;AACA;;AAED,UAAI6E,UAAU,IAAIvG,KAAJ,CAAUkC,KAAV,EAAiBT,SAAQ7B,EAAE8E,QAAF,CAAW/D,KAAX,EAAkBc,MAAlB,CAAR,GAAoCd,KAArD,EAA4DR,KAA5D,EAAmEQ,KAAnE,EAA0EuE,MAA1E,CAAd;;AAEAmB,WAAKC,IAAL,CAAUC,OAAV;;AAEA,UAAIH,KAAJ,EAAW;AACVC,YAAKC,IAAL,CAAUF,KAAV;AACA;;AAEDI,YAAMhG,SAAN,CAAgBiG,MAAhB,CAAuBC,KAAvB,CAA6B/B,MAA7B,EAAqC0B,IAArC;AACA;AACD;AACD;;AAED,UAAO1B,MAAP;AACA,GA1WoB;;AA4WrB/B,SAAO;AACN+D,QAAK,EADC;;AAGNC,QAAK,aAAUC,IAAV,EAAgBzE,QAAhB,EAA0B;AAC9B,QAAIQ,QAAQhD,EAAEgD,KAAF,CAAQ+D,GAApB;;AAEA/D,UAAMiE,IAAN,IAAcjE,MAAMiE,IAAN,KAAe,EAA7B;;AAEAjE,UAAMiE,IAAN,EAAYP,IAAZ,CAAiBlE,QAAjB;AACA,IATK;;AAWNS,QAAK,aAAUgE,IAAV,EAAgBnE,GAAhB,EAAqB;AACzB,QAAIoE,YAAYlH,EAAEgD,KAAF,CAAQ+D,GAAR,CAAYE,IAAZ,CAAhB;;AAEA,QAAI,CAACC,SAAD,IAAc,CAACA,UAAU/E,MAA7B,EAAqC;AACpC;AACA;;AAED,SAAK,IAAIO,IAAE,CAAN,EAASF,QAAd,EAAwBA,WAAW0E,UAAUxE,GAAV,CAAnC,GAAoD;AACnDF,cAASM,GAAT;AACA;AACD;AArBK;AA5Wc,EAAtB;;AAqYA,KAAI1C,QAAQJ,EAAEI,KAAF,GAAU,UAASC,IAAT,EAAeC,OAAf,EAAwBC,KAAxB,EAA+B4G,UAA/B,EAA2C7B,MAA3C,EAAmD;AACxE,OAAKjF,IAAL,GAAYA,IAAZ;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA;AACA,OAAK4B,MAAL,GAAc,CAACgF,cAAc,EAAf,EAAmBhF,MAAnB,GAA0B,CAAxC;AACA,OAAKmD,MAAL,GAAc,CAAC,CAACA,MAAhB;AACA,EAPD;;AASAlF,OAAMsE,SAAN,GAAkB,UAAShE,CAAT,EAAY6C,QAAZ,EAAsBC,MAAtB,EAA8B;AAC/C,MAAI,OAAO9C,CAAP,IAAY,QAAhB,EAA0B;AACzB,UAAOA,CAAP;AACA;;AAED,MAAIV,EAAEC,IAAF,CAAOI,IAAP,CAAYK,CAAZ,MAAmB,OAAvB,EAAgC;AAC/B,UAAOA,EAAEF,GAAF,CAAM,UAAS6C,OAAT,EAAkB;AAC9B,WAAOjD,MAAMsE,SAAN,CAAgBrB,OAAhB,EAAyBE,QAAzB,EAAmC7C,CAAnC,CAAP;AACA,IAFM,EAEJ0G,IAFI,CAEC,EAFD,CAAP;AAGA;;AAED,MAAItE,MAAM;AACTzC,SAAMK,EAAEL,IADC;AAETC,YAASF,MAAMsE,SAAN,CAAgBhE,EAAEJ,OAAlB,EAA2BiD,QAA3B,EAAqCC,MAArC,CAFA;AAGT6D,QAAK,MAHI;AAITC,YAAS,CAAC,OAAD,EAAU5G,EAAEL,IAAZ,CAJA;AAKTkH,eAAY,EALH;AAMThE,aAAUA,QAND;AAOTC,WAAQA;AAPC,GAAV;;AAUA,MAAIV,IAAIzC,IAAJ,IAAY,SAAhB,EAA2B;AAC1ByC,OAAIyE,UAAJ,CAAe,YAAf,IAA+B,MAA/B;AACA;;AAED,MAAI7G,EAAEH,KAAN,EAAa;AACZ,OAAIiH,UAAUxH,EAAEC,IAAF,CAAOI,IAAP,CAAYK,EAAEH,KAAd,MAAyB,OAAzB,GAAmCG,EAAEH,KAArC,GAA6C,CAACG,EAAEH,KAAH,CAA3D;AACAqG,SAAMhG,SAAN,CAAgB8F,IAAhB,CAAqBI,KAArB,CAA2BhE,IAAIwE,OAA/B,EAAwCE,OAAxC;AACA;;AAEDxH,IAAEgD,KAAF,CAAQC,GAAR,CAAY,MAAZ,EAAoBH,GAApB;;AAEA,MAAIyE,aAAa5G,OAAO8G,IAAP,CAAY3E,IAAIyE,UAAhB,EAA4B/G,GAA5B,CAAgC,UAASyG,IAAT,EAAe;AAC/D,UAAOA,OAAO,IAAP,GAAc,CAACnE,IAAIyE,UAAJ,CAAeN,IAAf,KAAwB,EAAzB,EAA6BxG,OAA7B,CAAqC,IAArC,EAA2C,QAA3C,CAAd,GAAqE,GAA5E;AACA,GAFgB,EAEd2G,IAFc,CAET,GAFS,CAAjB;;AAIA,SAAO,MAAMtE,IAAIuE,GAAV,GAAgB,UAAhB,GAA6BvE,IAAIwE,OAAJ,CAAYF,IAAZ,CAAiB,GAAjB,CAA7B,GAAqD,GAArD,IAA4DG,aAAa,MAAMA,UAAnB,GAAgC,EAA5F,IAAkG,GAAlG,GAAwGzE,IAAIxC,OAA5G,GAAsH,IAAtH,GAA6HwC,IAAIuE,GAAjI,GAAuI,GAA9I;AAEA,EAtCD;;AAwCA,KAAI,CAAC5H,MAAM0D,QAAX,EAAqB;AACpB,MAAI,CAAC1D,MAAMiI,gBAAX,EAA6B;AAC5B;AACA,UAAOjI,MAAMI,KAAb;AACA;AACA;AACDJ,QAAMiI,gBAAN,CAAuB,SAAvB,EAAkC,UAAStD,GAAT,EAAc;AAC/C,OAAIuD,UAAUlD,KAAKmD,KAAL,CAAWxD,IAAIE,IAAf,CAAd;AAAA,OACIxE,OAAO6H,QAAQpE,QADnB;AAAA,OAEIO,OAAO6D,QAAQ7D,IAFnB;AAAA,OAGIa,iBAAiBgD,QAAQhD,cAH7B;;AAKAlF,SAAM+E,WAAN,CAAkBxE,EAAE4E,SAAF,CAAYd,IAAZ,EAAkB9D,EAAEwB,SAAF,CAAY1B,IAAZ,CAAlB,EAAqCA,IAArC,CAAlB;AACA,OAAI6E,cAAJ,EAAoB;AACnBlF,UAAMoI,KAAN;AACA;AACD,GAVD,EAUG,KAVH;;AAYA,SAAOpI,MAAMI,KAAb;AACA;;AAED;AACA,KAAIiI,SAAS3E,SAAS4E,aAAT,IAA0B,GAAGxB,KAAH,CAASzF,IAAT,CAAcqC,SAAS6E,oBAAT,CAA8B,QAA9B,CAAd,EAAuDC,GAAvD,EAAvC;;AAEA,KAAIH,MAAJ,EAAY;AACX9H,IAAEkE,QAAF,GAAa4D,OAAOI,GAApB;;AAEA,MAAI/E,SAASuE,gBAAT,IAA6B,CAACI,OAAOK,YAAP,CAAoB,aAApB,CAAlC,EAAsE;AACrE,OAAGhF,SAASiF,UAAT,KAAwB,SAA3B,EAAsC;AACrC,QAAI1I,OAAO2I,qBAAX,EAAkC;AACjC3I,YAAO2I,qBAAP,CAA6BrI,EAAE4C,YAA/B;AACA,KAFD,MAEO;AACNlD,YAAO4I,UAAP,CAAkBtI,EAAE4C,YAApB,EAAkC,EAAlC;AACA;AACD,IAND,MAOK;AACJO,aAASuE,gBAAT,CAA0B,kBAA1B,EAA8C1H,EAAE4C,YAAhD;AACA;AACD;AACD;;AAED,QAAOnD,MAAMI,KAAb;AAEC,CAveW,EAAZ;;AAyeA,IAAI,OAAO0I,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAA5C,EAAqD;AACpDD,QAAOC,OAAP,GAAiB3I,KAAjB;AACA;;AAED;AACA,IAAI,OAAO2F,MAAP,KAAkB,WAAtB,EAAmC;AAClCA,QAAO3F,KAAP,GAAeA,KAAf;AACA;;AAGD;;;;AAIAA,MAAM2B,SAAN,CAAgBiH,MAAhB,GAAyB;AACxB,YAAW,iBADa;AAExB,WAAU,gBAFc;AAGxB,YAAW,qBAHa;AAIxB,UAAS,yBAJe;AAKxB,QAAO;AACNrD,WAAS,uGADH;AAENvD,UAAQ;AACP,UAAO;AACNuD,aAAS,iBADH;AAENvD,YAAQ;AACP,oBAAe,OADR;AAEP,kBAAa;AAFN;AAFF,IADA;AAQP,iBAAc;AACbuD,aAAS,iCADI;AAEbvD,YAAQ;AACP,oBAAe;AADR;AAFK,IARP;AAcP,kBAAe,MAdR;AAeP,gBAAa;AACZuD,aAAS,WADG;AAEZvD,YAAQ;AACP,kBAAa;AADN;AAFI;;AAfN;AAFF,EALiB;AA+BxB,WAAU;AA/Bc,CAAzB;;AAkCA;AACAhC,MAAMmD,KAAN,CAAYgE,GAAZ,CAAgB,MAAhB,EAAwB,UAASlE,GAAT,EAAc;;AAErC,KAAIA,IAAIzC,IAAJ,KAAa,QAAjB,EAA2B;AAC1ByC,MAAIyE,UAAJ,CAAe,OAAf,IAA0BzE,IAAIxC,OAAJ,CAAYG,OAAZ,CAAoB,OAApB,EAA6B,GAA7B,CAA1B;AACA;AACD,CALD;;AAOAZ,MAAM2B,SAAN,CAAgBkH,GAAhB,GAAsB7I,MAAM2B,SAAN,CAAgBiH,MAAtC;AACA5I,MAAM2B,SAAN,CAAgBmH,IAAhB,GAAuB9I,MAAM2B,SAAN,CAAgBiH,MAAvC;AACA5I,MAAM2B,SAAN,CAAgBoH,MAAhB,GAAyB/I,MAAM2B,SAAN,CAAgBiH,MAAzC;AACA5I,MAAM2B,SAAN,CAAgBqH,GAAhB,GAAsBhJ,MAAM2B,SAAN,CAAgBiH,MAAtC;;AAGA;;;;AAIA5I,MAAM2B,SAAN,CAAgBsH,GAAhB,GAAsB;AACrB,YAAW,kBADU;AAErB,WAAU;AACT1D,WAAS,2BADA;AAETvD,UAAQ;AACP,WAAQ;AACR;AAFO;AAFC,EAFW;AASrB,QAAO,8DATc;AAUrB,aAAY,8BAVS;AAWrB,WAAU;AACTuD,WAAS,6CADA;AAETE,UAAQ;AAFC,EAXW;AAerB,aAAY,wBAfS;AAgBrB,cAAa,iBAhBQ;AAiBrB,aAAY,mBAjBS;AAkBrB,gBAAe;AAlBM,CAAtB;;AAqBAzF,MAAM2B,SAAN,CAAgBsH,GAAhB,CAAoB,QAApB,EAA8BjH,MAA9B,CAAqCmD,IAArC,GAA4CnF,MAAMI,IAAN,CAAWmB,KAAX,CAAiBvB,MAAM2B,SAAN,CAAgBsH,GAAjC,CAA5C;;AAEA,IAAIjJ,MAAM2B,SAAN,CAAgBiH,MAApB,EAA4B;AAC3B5I,OAAM2B,SAAN,CAAgBI,YAAhB,CAA6B,QAA7B,EAAuC,KAAvC,EAA8C;AAC7C,WAAS;AACRwD,YAAS,yCADD;AAERC,eAAY,IAFJ;AAGRxD,WAAQhC,MAAM2B,SAAN,CAAgBsH,GAHhB;AAIRvI,UAAO;AAJC;AADoC,EAA9C;;AASAV,OAAM2B,SAAN,CAAgBI,YAAhB,CAA6B,QAA7B,EAAuC,YAAvC,EAAqD;AACpD,gBAAc;AACbwD,YAAS,sBADI;AAEbvD,WAAQ;AACP,iBAAa;AACZuD,cAAS,YADG;AAEZvD,aAAQhC,MAAM2B,SAAN,CAAgBiH,MAAhB,CAAuBpB,GAAvB,CAA2BxF;AAFvB,KADN;AAKP,mBAAe,uBALR;AAMP,kBAAc;AACbuD,cAAS,KADI;AAEbvD,aAAQhC,MAAM2B,SAAN,CAAgBsH;AAFX;AANP,IAFK;AAabvI,UAAO;AAbM;AADsC,EAArD,EAgBGV,MAAM2B,SAAN,CAAgBiH,MAAhB,CAAuBpB,GAhB1B;AAiBA;;AAED;;;;AAIAxH,MAAM2B,SAAN,CAAgBuH,KAAhB,GAAwB;AACvB,YAAW,CACV;AACC3D,WAAS,2BADV;AAECC,cAAY;AAFb,EADU,EAKV;AACCD,WAAS,kBADV;AAECC,cAAY;AAFb,EALU,CADY;AAWvB,WAAU;AACTD,WAAS,8CADA;AAETE,UAAQ;AAFC,EAXa;AAevB,eAAc;AACbF,WAAS,sGADI;AAEbC,cAAY,IAFC;AAGbxD,UAAQ;AACPmH,gBAAa;AADN;AAHK,EAfS;AAsBvB,YAAW,0GAtBY;AAuBvB,YAAW,kBAvBY;AAwBvB,aAAY,mBAxBW;AAyBvB,WAAU,+CAzBa;AA0BvB,aAAY,yDA1BW;AA2BvB,gBAAe;AA3BQ,CAAxB;;AA+BA;;;;AAIAnJ,MAAM2B,SAAN,CAAgByH,UAAhB,GAA6BpJ,MAAM2B,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AAC5D,YAAW,2TADiD;AAE5D,WAAU,8EAFkD;AAG5D;AACA,aAAY,uDAJgD;AAK5D,aAAY;AALgD,CAAhC,CAA7B;;AAQA5B,MAAM2B,SAAN,CAAgBI,YAAhB,CAA6B,YAA7B,EAA2C,SAA3C,EAAsD;AACrD,UAAS;AACRwD,WAAS,8EADD;AAERC,cAAY,IAFJ;AAGRC,UAAQ;AAHA;AAD4C,CAAtD;;AAQAzF,MAAM2B,SAAN,CAAgBI,YAAhB,CAA6B,YAA7B,EAA2C,QAA3C,EAAqD;AACpD,oBAAmB;AAClBwD,WAAS,uBADS;AAElBE,UAAQ,IAFU;AAGlBzD,UAAQ;AACP,oBAAiB;AAChBuD,aAAS,aADO;AAEhBvD,YAAQ;AACP,kCAA6B;AAC5BuD,eAAS,WADmB;AAE5B7E,aAAO;AAFqB,MADtB;AAKPyE,WAAMnF,MAAM2B,SAAN,CAAgByH;AALf;AAFQ,IADV;AAWP,aAAU;AAXH;AAHU;AADiC,CAArD;;AAoBA,IAAIpJ,MAAM2B,SAAN,CAAgBiH,MAApB,EAA4B;AAC3B5I,OAAM2B,SAAN,CAAgBI,YAAhB,CAA6B,QAA7B,EAAuC,KAAvC,EAA8C;AAC7C,YAAU;AACTwD,YAAS,2CADA;AAETC,eAAY,IAFH;AAGTxD,WAAQhC,MAAM2B,SAAN,CAAgByH,UAHf;AAIT1I,UAAO;AAJE;AADmC,EAA9C;AAQA;;AAEDV,MAAM2B,SAAN,CAAgB0H,EAAhB,GAAqBrJ,MAAM2B,SAAN,CAAgByH,UAArC;;AAEA;;;;AAIA,CAAC,YAAY;AACZ,KAAI,OAAOrJ,IAAP,KAAgB,WAAhB,IAA+B,CAACA,KAAKC,KAArC,IAA8C,CAACD,KAAKuD,QAApD,IAAgE,CAACA,SAASgG,aAA9E,EAA6F;AAC5F;AACA;;AAEDvJ,MAAKC,KAAL,CAAWuJ,aAAX,GAA2B,YAAW;;AAErC,MAAIC,aAAa;AAChB,SAAM,YADU;AAEhB,SAAM,QAFU;AAGhB,SAAM,MAHU;AAIhB,UAAO,YAJS;AAKhB,WAAQ,YALQ;AAMhB,SAAM,MANU;AAOhB,UAAO,OAPS;AAQhB,QAAK,GARW;AAShB,UAAO;AATS,GAAjB;;AAYA,MAAGzC,MAAMhG,SAAN,CAAgB0I,OAAnB,EAA4B;AAAE;AAC7B1C,SAAMhG,SAAN,CAAgB2F,KAAhB,CAAsBzF,IAAtB,CAA2BqC,SAASC,gBAAT,CAA0B,eAA1B,CAA3B,EAAuEkG,OAAvE,CAA+E,UAAUC,GAAV,EAAe;AAC7F,QAAIrB,MAAMqB,IAAIC,YAAJ,CAAiB,UAAjB,CAAV;;AAEA,QAAIjG,QAAJ;AAAA,QAAcC,SAAS+F,GAAvB;AACA,QAAIzJ,OAAO,gCAAX;AACA,WAAO0D,UAAU,CAAC1D,KAAK2D,IAAL,CAAUD,OAAOE,SAAjB,CAAlB,EAA+C;AAC9CF,cAASA,OAAOG,UAAhB;AACA;;AAED,QAAIH,MAAJ,EAAY;AACXD,gBAAW,CAACgG,IAAI7F,SAAJ,CAAc3C,KAAd,CAAoBjB,IAApB,KAA6B,GAAG,EAAH,CAA9B,EAAsC,CAAtC,CAAX;AACA;;AAED,QAAI,CAACyD,QAAL,EAAe;AACd,SAAIkG,YAAY,CAACvB,IAAInH,KAAJ,CAAU,UAAV,KAAyB,GAAG,EAAH,CAA1B,EAAkC,CAAlC,CAAhB;AACAwC,gBAAW8F,WAAWI,SAAX,KAAyBA,SAApC;AACA;;AAED,QAAI3F,OAAOX,SAASuG,aAAT,CAAuB,MAAvB,CAAX;AACA5F,SAAKJ,SAAL,GAAiB,cAAcH,QAA/B;;AAEAgG,QAAIxF,WAAJ,GAAkB,EAAlB;;AAEAD,SAAKC,WAAL,GAAmB,UAAnB;;AAEAwF,QAAII,WAAJ,CAAgB7F,IAAhB;;AAEA,QAAI8F,MAAM,IAAIC,cAAJ,EAAV;;AAEAD,QAAIE,IAAJ,CAAS,KAAT,EAAgB5B,GAAhB,EAAqB,IAArB;;AAEA0B,QAAIG,kBAAJ,GAAyB,YAAY;AACpC,SAAIH,IAAIxB,UAAJ,IAAkB,CAAtB,EAAyB;;AAExB,UAAIwB,IAAII,MAAJ,GAAa,GAAb,IAAoBJ,IAAIK,YAA5B,EAA0C;AACzCnG,YAAKC,WAAL,GAAmB6F,IAAIK,YAAvB;;AAEApK,aAAMyD,gBAAN,CAAuBQ,IAAvB;AACA,OAJD,MAKK,IAAI8F,IAAII,MAAJ,IAAc,GAAlB,EAAuB;AAC3BlG,YAAKC,WAAL,GAAmB,aAAa6F,IAAII,MAAjB,GAA0B,wBAA1B,GAAqDJ,IAAIM,UAA5E;AACA,OAFI,MAGA;AACJpG,YAAKC,WAAL,GAAmB,0CAAnB;AACA;AACD;AACD,KAfD;;AAiBA6F,QAAIO,IAAJ,CAAS,IAAT;AACA,IAjDD;AAkDA;AAED,EAnED;;AAqEAhH,UAASuE,gBAAT,CAA0B,kBAA1B,EAA8C9H,KAAKC,KAAL,CAAWuJ,aAAzD;AAEA,CA5ED","file":"prism.js","sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n"]}"}